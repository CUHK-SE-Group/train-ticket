apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: example-local-pv
# spec:
#   capacity:
#     storage: 5Gi
#   volumeMode: Filesystem
#   accessModes:
#     - ReadWriteOnce
#   persistentVolumeReclaimPolicy: Delete
#   storageClassName: local-storage
#   local:
#     path: /mnt/data
#   nodeAffinity:
#     required:
#       nodeSelectorTerms:
#       - matchExpressions:
#         - key: kubernetes.io/hostname
#           operator: In
#           values:
#           - worker2
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-db
data:
  mysql-init.sql: |
    CREATE DATABASE IF NOT EXISTS ts;
    USE mysql;
    GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;
    FLUSH PRIVILEGES;
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
data:
  my.cnf: |
    [mysqld]
    max_connections = 1024
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  serviceName: "mysql"
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:5.7
        command: ["/bin/sh"]
        args: ["-c", "ulimit -n 10240 && docker-entrypoint.sh mysqld"]
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "yourpassword"
        ports:
        - containerPort: 3306
        volumeMounts:
        # - name: mysql-persistent-storage
        #   mountPath: /var/lib/mysql
        - name: mysql-init-db
          mountPath: /docker-entrypoint-initdb.d
        - name: mysql-config
          mountPath: /etc/mysql/conf.d
        livenessProbe:
          exec:
            command: ["mysqladmin", "ping", "-uroot", "-pyourpassword"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: mysql-init-db
        configMap:
          name: mysql-init-db
      - name: mysql-config
        configMap:
          name: mysql-config
  # volumeClaimTemplates:
  # - metadata:
  #     name: mysql-persistent-storage
  #   spec:
  #     accessModes: [ "ReadWriteOnce" ]
  #     storageClassName: "local-storage"
  #     resources:
  #       requests:
  #         storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: mysql
  clusterIP: None

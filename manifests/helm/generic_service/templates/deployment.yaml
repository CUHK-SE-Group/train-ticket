{{- $root := . }}
{{- range $name, $svc := .Values.services }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $svc.name }}
  labels:
    app: {{ $svc.name }}
spec:
  selector:
    matchLabels:
      app: {{ $svc.name }}
  template:
    metadata:
      labels:
        app: {{ $svc.name }}
    spec:
      containers:
      - name: {{ $svc.name }}
        image: "{{ $root.Values.global.image.repository }}/{{ $svc.name }}:{{ $root.Values.global.image.tag | default $root.Chart.AppVersion }}"
        {{- with $root.Values.global.image.pullPolicy }}
        imagePullPolicy: {{ . }}{{- end}}
        envFrom:
        - secretRef:
            name: {{ $svc.secretRef | quote}}
      {{- with $root.Values.global.monitoring}}
      {{- if eq $root.Values.global.monitoring "skywalking"}}
        volumeMounts:
          - name: skywalking-agent
            mountPath: /skywalking-agent
        env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: SW_AGENT_COLLECTOR_BACKEND_SERVICES
            value: "skywalking-skywalking-helm-oap:11800"
          - name: SW_GRPC_LOG_SERVER_HOST
            value: "skywalking-skywalking-helm-oap"
          - name: SW_GRPC_LOG_SERVER_PORT
            value: "11800"
          - name: SW_AGENT_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['app']
          - name: JAVA_TOOL_OPTIONS
            value: "-javaagent:/skywalking-agent/skywalking-agent.jar"
      volumes:
        - name: skywalking-agent
          emptyDir: {}
      initContainers:
      - name: init-skywalking-agent
        image: {{ $root.Values.skywalking.image }}
        command: ['sh', '-c', 'cp -r /skywalking/agent/* /skywalking-agent/']
        volumeMounts:
        - name: skywalking-agent
          mountPath: /skywalking-agent
      {{- end}}
      {{- if eq $root.Values.global.monitoring "opentelemtry"}}

      {{- end}} 
      {{- end}}
---
{{- end}}